{"version":3,"sources":["components/Form/Form.module.scss","components/Form/Form.js","components/redux/contacts/contacts-actions.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","components/redux/contacts/contacts-reduser.js","components/redux/store.js","index.js","components/ContactList/ContactList.module.scss","components/App/App.module.scss"],"names":["module","exports","Form","onSubmit","useState","name","setName","number","setNumber","inputChange","e","currentTarget","value","console","log","preventDefault","target","className","s","form","type","pattern","title","required","onChange","btnSend","filterAction","createAction","contactsItem","contactsDelete","ContactList","data","dispatch","useDispatch","contact__list","map","contact__item","contact__name","contact__number","contact__button","onClick","contactsActions","id","Filter","popTypes","PropTypes","string","isRequired","func","App","filter","useSelector","state","contacts","items","item","phonebook","find","contact","alert","containerOverflow","length","lowerCase","toLowerCase","includes","getFiltered","contactsFilter","createReducer","payload","uuidv4","combineReducers","persistConfig","key","storage","rootReduser","contactsReduser","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ef1f2d21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2WSGG\",\"btnSend\":\"Form_btnSend__305T4\"};","import { useState } from 'react';\nimport s from './Form.module.scss';\nimport PropTypes from 'prop-types';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('Упс, при вводе что-то пошло не так');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    onSubmit(name, number);\n    reset();\n  };\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label>\n        <span>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={inputChange}\n        />\n      </label>\n      <label>\n        <span>Number</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={inputChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.btnSend}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterAction = createAction('app/filter');\nexport const contactsItem = createAction('app/contacts');\nexport const contactsDelete = createAction('app/delete');\n","import s from './ContactList.module.scss';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport * as contactsActions from '../redux/contacts/contacts-actions';\n\nfunction ContactList({ data }) {\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={s.contact__list}>\n      {data.map(e => (\n        <li key={e.id} className={s.contact__item}>\n          <span className={s.contact__name}>{e.name}:</span>\n          <span className={s.contact__number}>{e.number}</span>\n          <button\n            type=\"button\"\n            className={s.contact__button}\n            onClick={() => dispatch(contactsActions.contactsDelete(e.id))}\n          ></button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label>\n      Filter by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.popTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport s from './App.module.scss';\nimport Form from '../Form';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterAction, contactsItem } from '../redux/contacts/contacts-actions';\n\nfunction App() {\n  const filter = useSelector(state => state.contacts.filter);\n  const items = useSelector(state => state.contacts.item);\n  const dispatch = useDispatch();\n\n  function formSubmit(name, number) {\n    if (items.find(contact => contact.name === name)) {\n      alert(`${name} is already in the contacts`);\n      return;\n    }\n\n    return dispatch(contactsItem({ name, number }));\n  }\n\n  function getFiltered() {\n    const lowerCase = filter && filter.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(lowerCase),\n    );\n  }\n\n  function filt(e) {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'filter':\n        dispatch(filterAction(value));\n        break;\n      default:\n        return;\n    }\n  }\n\n  return (\n    <div className={s.phonebook}>\n      <h1 className={s.title}>Phonebook</h1>\n      <Form onSubmit={formSubmit} />\n      <div className=\"contacts\">\n        <h2 className={s.title}>Contacts</h2>\n        <Filter value={filter} onChange={filt} />\n        <div className={s.containerOverflow}>\n          {items.length !== 0 ? (\n            <ContactList data={getFiltered()} />\n          ) : (\n            <p>There is nothing here yet</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as contactsActions from './contacts-actions';\n\nconst contactsFilter = createReducer('', {\n  [contactsActions.filterAction]: (state, { payload }) => payload,\n});\n\nconst contactsItem = createReducer([], {\n  [contactsActions.contactsItem]: (state, { payload }) => {\n    return [{ ...payload, id: uuidv4() }, ...state];\n  },\n  [contactsActions.contactsDelete]: (state, { payload }) => {\n    return state.filter(({ id }) => id !== payload);\n  },\n});\n\nexport default combineReducers({\n  filter: contactsFilter,\n  item: contactsItem,\n});\n","import { combineReducers } from 'redux';\nimport contactsReduser from './contacts/contacts-reduser';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'items',\n  storage,\n};\n\nconst rootReduser = combineReducers({\n  contacts: contactsReduser,\n});\n\nconst store = configureStore({\n  reducer: persistReducer(persistConfig, rootReduser),\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nconst persistor = persistStore(store);\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App';\nimport { store, persistor } from './components/redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"ContactList_contact__list__2i53X\",\"contact__item\":\"ContactList_contact__item__1uwu6\",\"contact__number\":\"ContactList_contact__number__2E3pv\",\"contact__button\":\"ContactList_contact__button__MTyH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"App_phonebook__1L7rN\",\"title\":\"App_title__20IIw\",\"containerOverflow\":\"App_containerOverflow__E_e42\"};"],"sourceRoot":""}